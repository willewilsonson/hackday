{"ast":null,"code":"var _jsxFileName = \"/Users/salt-dev/Desktop/hackday/client/src/components/Card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport CardNav from '../CardNav/CardNav';\nimport './Card.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst dateFormatter = unixTime => {\n  const unixTimeInMs = unixTime * 1000;\n  const dateObject = new Date(unixTimeInMs);\n  const dateOptions = {\n    weekday: 'long',\n    month: 'long',\n    day: 'numeric',\n    year: \"numeric\"\n  };\n  return dateObject.toLocaleDateString(\"en-US\", dateOptions);\n};\n\nconst Card = ({\n  results\n}) => {\n  _s();\n\n  const [dailyInfo, setDailyInfo] = useState({});\n  useEffect(() => {\n    const fetchDailyInfo = () => {\n      fetch(`/api/coords/${results.coord.lat}&${results.coord.lon}`).then(res => res.json()).then(data => setDailyInfo(data));\n    };\n\n    fetchDailyInfo();\n  }, [results.coord.lon, results.coord.lat]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      className: `weather-app__list-item`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-item-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-item__main-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list-item__content--left-side\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"list-item__location\",\n              children: [results.name, \", \", results.sys.country]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"list-item__date\",\n              children: dateFormatter(results.dt)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `http://openweathermap.org/img/wn/${results.weather[0].icon}@2x.png`,\n              alt: results.weather[0].description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"list-item__weather\",\n              children: results.weather[0].main\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list-item__content--right-side\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"list-item__temp\",\n              children: [Math.round(results.main.temp), \"\\xB0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"list-item__minmax-temp\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"color--light-yellow\",\n                children: [Math.round(results.main.temp_min), \"\\xB0\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 54\n              }, this), \" / \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"color--light-purple\",\n                children: [Math.round(results.main.temp_max), \"\\xB0\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 138\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardNav, {\n          results: results,\n          dailyInfo: dailyInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Card, \"AETn4oSGX2LU6pubGnuZg8p72kg=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/salt-dev/Desktop/hackday/client/src/components/Card.js"],"names":["React","useState","useEffect","CardNav","dateFormatter","unixTime","unixTimeInMs","dateObject","Date","dateOptions","weekday","month","day","year","toLocaleDateString","Card","results","dailyInfo","setDailyInfo","fetchDailyInfo","fetch","coord","lat","lon","then","res","json","data","name","sys","country","dt","weather","icon","description","main","Math","round","temp","temp_min","temp_max"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport CardNav from '../CardNav/CardNav';\nimport './Card.css';\n\nconst dateFormatter = (unixTime) => {\n  const unixTimeInMs = unixTime * 1000;\n  const dateObject = new Date(unixTimeInMs);\n  const dateOptions = { weekday: 'long', month: 'long', day: 'numeric', year: \"numeric\"};\n  return dateObject.toLocaleDateString(\"en-US\", dateOptions);\n};\n\nconst Card = ({ results }) => {\n  const [dailyInfo, setDailyInfo] = useState({});\n\n  useEffect(() => {\n    const fetchDailyInfo = () => {\n      fetch(`/api/coords/${results.coord.lat}&${results.coord.lon}`)\n        .then(res => res.json())\n        .then(data => setDailyInfo(data));\n    }\n\n    fetchDailyInfo();\n  }, [results.coord.lon, results.coord.lat])\n\n  return (\n    <>\n      <li className={`weather-app__list-item`}>\n        <div className=\"list-item-container\">\n          <div className=\"list-item__main-content\">\n            <div className=\"list-item__content--left-side\">\n              <h3 className=\"list-item__location\">{results.name}, {results.sys.country}</h3>\n              <h4 className=\"list-item__date\">{dateFormatter(results.dt)}</h4>\n              <img\n                src={`http://openweathermap.org/img/wn/${results.weather[0].icon}@2x.png`}\n                alt={results.weather[0].description} />\n              <h3 className=\"list-item__weather\">{results.weather[0].main}</h3>\n            </div>\n            <div className=\"list-item__content--right-side\">\n              <h2 className=\"list-item__temp\">{Math.round(results.main.temp)}°</h2>\n              <h3 className=\"list-item__minmax-temp\"><span className=\"color--light-yellow\">{Math.round(results.main.temp_min)}°</span> / <span className=\"color--light-purple\">{Math.round(results.main.temp_max)}°</span></h3>\n            </div>\n          </div>\n        <CardNav results={results} dailyInfo={dailyInfo}/>\n        </div>\n      </li>\n    </>\n  )\n}\n\nexport default Card;"]},"metadata":{},"sourceType":"module"}